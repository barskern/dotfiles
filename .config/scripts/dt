#!/usr/bin/env bash
#
# dt - A script to manage a bare git repository for dotfiles
#

set -e

# the bare git directory for the dotfiles
DOTFILES_DIR="${XDG_CONFIG_HOME:-"$HOME/.config/"}/dotfiles"

# the branch which has the "shared" configuration options
# (only used to decided whether to prompt for a rebase)
COMMON_BRANCH="master"

CMD="/usr/bin/git --git-dir=$DOTFILES_DIR --work-tree=$HOME"

if [[ "$1" == "-h" ]]
then
	cat <<EOF
dt
A script to manage a bare git repository for dotfiles

USAGE:
	dt [-h] <branch>

The script will switch to the given branch and enter a loop asking for commits.
When done it will push the changes to the remote repository and rebase original
branch onto the new $COMMON_BRANCH (if $COMMON_BRANCH was the given branch).
EOF
	exit 0
fi

prompt()
{
	echo -n "$1 [Y/n]: "; read -r answer
	[[ -z "$answer" ]] \
		|| [[ "$answer" == "Y" ]] \
		|| [[ "$answer" == "y" ]]
}

branch="$1"
orig_branch="$($CMD branch --show-current)"

$CMD switch --merge "$branch"

# ensure branch is updated with latest remote changes
# (this also makes updating easy as the user only needs to run `dt master` to
# get the latest changes from the remote master branch)
$CMD fetch --prune --prune-tags --tags origin "$branch" \
	|| echo "Unable to fetch but rebasing with local.."
$CMD rebase --autostash

# a do-while loop in bash
while
	$CMD commit --interactive --verbose

	prompt "New commit"
do
	:
done

$CMD status

echo -e "\n#### Pushing changes (if any) on '$branch' to remote ####\n"
$CMD push --tags origin "$branch" \
	|| echo "Unable to push updates, make sure it's done when internet is back!"

$CMD switch --merge "$orig_branch"

# if common branch, then rebase original branch onto it
if [[ "$branch" == "$COMMON_BRANCH" && "$branch" != "$orig_branch" ]]
then
	echo -e "\n#### Rebasing '$orig_branch' onto '$branch' ####\n"
	$CMD rebase --autostash "$branch" "$orig_branch"

	echo -e "\n#### Pushing rebased branch '$orig_branch' to remote (using --force-with-lease) ####\n"
	$CMD push --tags --force-with-lease origin "$orig_branch" || exit 0
fi
