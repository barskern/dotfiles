#!/usr/bin/env bash

set -e

exec 3>&1
exec 1>&2

SSH_DIR="$HOME/.ssh"
SSH_CONFIG="$SSH_DIR/config"

function error() {
	echo -e "\u001b[31mError: $*\u001b[0m"
}

echo -n "Username of local user ($(whoami)): "; read -r local_username
local_username="${local_username:-"$(whoami)"}"

echo -n "Domain of service, e.g. 'github.com': "; read -r domain
if [ -z "$domain" ]; then
	error "A domain is required"
	exit 1
fi

comment="$local_username@$(hostname)"
sanitized_domain=$(\
	echo "$domain" \
		| sed 's/^[\*\.]*//;s/\.*$//' \
		| tr '.' '_' \
)
filename="$SSH_DIR/id_$sanitized_domain"

echo "Creating ssh key..."
ssh-keygen -q \
	-t ed25519 \
	-a 100 \
	-f "$filename" \
	-N "" \
	-C "$comment"

echo "Created ssh key at $filename"

echo "Removing old entry in $SSH_CONFIG"
sed -i "/# autogenerated $domain/,/# autogenerated end/d" "$SSH_CONFIG"

echo "Adding entry to $SSH_CONFIG"
cat <<EOF >> "$SSH_CONFIG"
# autogenerated $domain
Host $domain
	IdentityFile $filename
# autogenerated end
EOF

echo "Outputting public key to stdout"
cat "$filename.pub" >&3
